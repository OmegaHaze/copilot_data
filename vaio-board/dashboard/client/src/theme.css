/* ==========================================================================
   CRT Terminal Theme - Main StyleSheet
   Core styling for the retro terminal aesthetic
   ========================================================================== */

/* Core Tailwind Imports */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* ==========================================================================
   BASE STYLES
   ========================================================================== */

/* Base styles that apply regardless of theme */
html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  background: #000;
  color: #85EFAC;
  font-family: monospace;
  box-shadow:
    inset 0 0 100px #85EFAC1a,
    inset 0 0 200px #85EFAC14,
    inset 0 0 400px #85EFAC0d;
  overflow: hidden;
  /* Apply the green Font Awesome cursor */
  cursor: url('/uploads/icons/normal-cursor.svg'), auto; /* Default cursor */
}

/* ==========================================================================
   CURSOR STYLES
   ========================================================================== */

/* Hover cursor style */
a:hover, button:hover, .hover-cursor {
  cursor: url('/uploads/icons/hover-cursor.svg'), pointer; /* Cursor when hovering over links/buttons */
}

/* Move cursor style */
.move-cursor {
  cursor: url('/uploads/icons/move-cursor.svg'), move; /* Cursor when dragging items */
}

/* Text hover cursor */
a:hover, p:hover, .text-hover-cursor {
  cursor: url('/uploads/icons/text-hover-cursor.svg'), text; /* Cursor when hovering over text */
}

/* ==========================================================================
   CRT THEME UTILITY CLASSES
   Replaces standard Tailwind classes with CRT-themed equivalents
   ========================================================================== */

/* Background utilities */
.crt-bg-blk { @apply bg-black; }
.crt-bg-grn { @apply bg-green-400/10; }

/* Border utilities */
.crt-border-green6 { @apply border-green-600 border; }
.crt-border-green9  { @apply border-green-900 border; }
.crt-border6 { @apply border-green-600 border;}
.crt-border-inner7 { @apply border-green-700 border; }
.crt-border-b { @apply border-green-700 border-b; }
.crt-border-l { @apply border-green-700 border-l; }
.crt-border-r { @apply border-green-700 border-r; }
.crt-border-t { @apply border-green-700 border-t; }

/* Text utilities */
.crt-text4 { @apply text-green-400; }
.crt-text3 { @apply text-green-300; }
.crt-text5 { @apply text-green-500; }
.crt-text2 { @apply text-green-200; }
.crt-text7 { @apply text-green-700; }

/* Element styles */
.crt-link5 { @apply text-green-500 hover:text-green-300 hover:bg-green-900/30; }
.crt-panel-tab8 { @apply hidden md:flex items-center justify-center absolute top-4 bg-green-800 text-black text-xs font-bold px-2 py-1 move-cursor shadow-lg z-50; }

/* ==========================================================================
   SCROLLBAR STYLING
   ========================================================================== */

/* Simple square transparent scrollbar */
::-webkit-scrollbar {
  width: 7px;
  height: 7px;
}

::-webkit-scrollbar-thumb {
  background-color: rgba(57, 255, 20, 0.1);
  border-radius: 0;
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

/* ==========================================================================
   GRID COMPONENT OVERRIDES
   ========================================================================== */

/* Override the default shadow color for dragging items */
.react-grid-item.react-draggable-dragging {
  box-shadow: 0 0 10px rgba(57, 255, 20, 0.5) !important; /* Green shadow using your theme color */
  z-index: 3;
}

/* Override the resizing shadow as well */
.react-grid-item.resizing {
  box-shadow: 0 0 10px rgba(57, 255, 20, 0.5) !important;
  z-index: 3;
}

/* You can also customize the placeholder shadow if needed */
.react-grid-placeholder {
  background: rgba(57, 255, 20, 0.2) !important;
  border: 2px dashed rgba(57, 255, 20, 0.4) !important;
}

/* ==========================================================================
   CONTROL PANELS & UI ELEMENTS
   ========================================================================== */

/* Rotary knob styles */
.knob-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 1rem;
}

.knob {
  cursor: url('/uploads/icons/hover-cursor.svg'), grab;
  transition: filter 0.2s ease;
}

.knob:active {
  cursor: url('/uploads/icons/move-cursor.svg'), grabbing;
}

/* CRT scanline effect for knobs */
.knob-scanlines {
  position: absolute;
  inset: 0;
  background: linear-gradient(transparent 50%, rgba(0, 0, 0, 0.3) 50%);
  background-size: 100% 4px;
  mix-blend-mode: overlay;
  opacity: 0.2;
  pointer-events: none;
  border-radius: 50%;
}

/* Value display */
.knob-value {
  margin-top: 0.5rem;
  padding: 0.25rem 0.75rem;
  border-radius: 0.25rem;
  background-color: #000;
  border: 1px solid #39ff1440;
  box-shadow: inset 0 0 5px #39ff141a, 0 0 10px #39ff1426;
  text-align: center;
  min-width: 120px;
}

/* Metallic effect for knobs */
.knob-metallic {
  background: radial-gradient(circle at 30% 30%, #666, #333 70%, #111 100%);
  border: 1px solid #39ff1440;
}

/* FX board style for control panel */
.fx-board {
  background-color: #111;
  border: 1px solid #39ff1440;
  border-radius: 0.5rem;
  box-shadow:
    inset 0 0 10px #39ff141a,
    inset 0 0 20px #39ff1414,
    0 0 15px #39ff1426;
  padding: 1rem;
}

/* ==========================================================================
   ANIMATIONS & TRANSITIONS
   ========================================================================== */

/* Animation for LED indicators */
@keyframes ledPulse {
  0% { opacity: 0.7; }
  50% { opacity: 1; }
  100% { opacity: 0.7; }
}

.led-active {
  animation: ledPulse 2s infinite;
}

/* Modal animations */
@keyframes modalFadeIn {
  from { opacity: 0; transform: translate(-50%, -50%) scale(0.95); }
  to { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

.modal-enter {
  animation: modalFadeIn 0.3s ease-out forwards;
}

@keyframes modalFadeOut {
  from { opacity: 1; transform: translate(-50%, -50%) scale(1); }
  to { opacity: 0; transform: translate(-50%, -50%) scale(0.95); }
}

.modal-exit {
  animation: modalFadeOut 0.3s ease-in forwards;
}

/* ==========================================================================
   GLOW EFFECTS
   ========================================================================== */

/* Glow effects for knobs and indicators */
.crt-glow {
  filter: drop-shadow(0 0 2px #39ff14) drop-shadow(0 0 4px #39ff1480);
}

.crt-glow-intense {
  filter: drop-shadow(0 0 3px #39ff14) drop-shadow(0 0 6px #39ff14) drop-shadow(0 0 12px #39ff1480);
}

/* ==========================================================================
   BOOT SEQUENCE & CRT EFFECTS
   ========================================================================== */

/* Full screen flash flicker effect - modified to remove color change */
.flash-flicker {
  animation: hard-flicker 0.2s steps(2, start);
}
@keyframes hard-flicker {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; } /* Changed to opacity variation instead of color change */
}

/* Edge-only flicker effect with 5 flickers in one second */
.edge-flicker::before {
  content: '';
  position: absolute;
  inset: 0;
  box-shadow: 
    0 0 0 2px rgba(0, 255, 0, 0.5),
    0 0 5px 1px rgba(0, 255, 0, 0.3);
  pointer-events: none;
  z-index: 99;
  animation: edge-flash 1s steps(10, start) 1; /* 5 on/off cycles in 1 second (10 steps total) */
}

@keyframes edge-flash {
  0%, 20%, 40%, 60%, 80% { opacity: 0; } /* Off states (5 times) */
  10%, 30%, 50%, 70%, 90% { opacity: 1; } /* On states (5 times) */
}

/* New authentic terminal glitch effect */
.terminal-glitch {
  position: absolute;
  inset: 0;
  z-index: 98;
  pointer-events: none;
  overflow: hidden;
  animation: terminal-glitch-cycle 1s steps(10, start) 1;
}

/* First layer: Horizontal scan distortion */
.terminal-glitch::before {
  content: '';
  position: absolute;
  inset: 0;
  background: transparent;
  z-index: 2;
  animation: horizontal-distortion 1s steps(10, start) 1;
}

/* Second layer: Subtle text corruption and sync issues */
.terminal-glitch::after {
  content: '';
  position: absolute;
  inset: 0;
  z-index: 3;
  background: repeating-linear-gradient(
    to bottom,
    transparent 0%,
    rgba(0, 100, 0, 0.15) 0.2%,
    transparent 0.3%
  );
  opacity: 0;
  mix-blend-mode: screen;
  animation: sync-issue 1s cubic-bezier(0.1, 0.3, 0.2, 1) 1;
}

@keyframes terminal-glitch-cycle {
  0%, 20%, 40%, 60%, 80% { opacity: 0; transform: translateY(0); }
  5%, 25%, 45%, 65%, 85% { 
    opacity: 1; 
    transform: translateY(-1px); 
  }
  15%, 35%, 55%, 75%, 95% { 
    opacity: 1; 
    transform: translateY(1px); 
  }
}

@keyframes horizontal-distortion {
  0%, 20%, 40%, 60%, 80% {
    clip-path: none;
    transform: translateX(0);
  }
  5%, 45%, 85% {
    clip-path: polygon(
      0 0, 
      100% 0, 
      100% 25%, 
      0 25%, 
      0 27%, 
      100% 27%,
      100% 52%, 
      0 52%,
      0 54%, 
      100% 54%,
      100% 100%, 
      0 100%
    );
    transform: translateX(2px);
  }
  15%, 55%, 95% {
    clip-path: polygon(
      0 0, 
      100% 0, 
      100% 78%, 
      0 78%, 
      0 80%, 
      100% 80%,
      100% 100%, 
      0 100%
    );
    transform: translateX(-1px);
  }
}

@keyframes sync-issue {
  0%, 20%, 70%, 100% { opacity: 0; transform: translateY(0); }
  5%, 10%, 15% { opacity: 0.5; transform: translateY(10px); }
  25%, 30%, 35% { opacity: 0.3; transform: translateY(-7px); }
  45%, 50%, 55% { opacity: 0.5; transform: translateY(5px); }
  80%, 85%, 90% { opacity: 0.3; transform: translateY(-5px); }
}

/* Subtle glow effect for the screen edge */
.boot-glow::before {
  content: '';
  position: absolute;
  inset: 0;
  box-shadow: 
    0 0 120px 30px rgba(0, 255, 0, 0.1),
    0 0 300px 60px rgba(0, 255, 0, 0.05),
    inset 0 0 120px 30px rgba(0, 255, 0, 0.1);
  pointer-events: none;
  z-index: -1;
}

/* CRT scanlines effect */
.scanlines {
  background-image: repeating-linear-gradient(
    to bottom,
    rgba(231, 231, 231, 0.1),
    rgba(0, 255, 0, 0.08) 1px,
    transparent 1px,
    transparent 3px
  );
  background-size: 100% 3px;
  animation: scanlines 0.6s linear infinite;
}

/* Faster scan pulse */
.scan-pulse {
  animation: scanlines 0.3s linear infinite;
}

/* Moving scanlines animation */
@keyframes scanlines {
  0% { background-position: 0 0; }
  100% { background-position: 0 6px; } /* Move by 6px (2x pattern height) */
}

/* Typing animation effect */
.typing-line {
  animation: typing 0.3s ease-out;
}
@keyframes typing {
  from { opacity: 0; transform: translateX(-4px); }
  to   { opacity: 1; transform: translateX(0); }
}

/* Text glitch flicker effect */
.glitch-flicker {
  animation: glitch 0.5s steps(2, start) infinite;
  position: relative;
}
@keyframes glitch {
  0%   { text-shadow: 2px 0 red, -2px 0 cyan; transform: skewX(10deg); }
  20%  { text-shadow: -2px 0 red, 2px 0 cyan; transform: skewX(-5deg); }
  40%  { text-shadow: 1px 0 red, -1px 0 cyan; transform: skewX(0deg); }
  60%  { text-shadow: -1px 0 red, 1px 0 cyan; transform: skewX(5deg); }
  80%  { text-shadow: 2px 0 red, -2px 0 cyan; transform: skewX(-10deg); }
  100% { text-shadow: none; transform: none; }
}

/* Glow pulse animation (commented out) */
/* .glow-pulse {
  animation: glow 1.5s ease-in-out infinite;
} */
@keyframes glow {
  0%, 100% { text-shadow: 0 0 2px #39ff14, 0 0 10px #39ff14; }
  50%      { text-shadow: 0 0 4px #39ff14, 0 0 20px #39ff14; }
}

/* CRT burn-in effect */
.burn-in {
  position: relative;
}
.burn-in::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  color: #39ff1480;
  filter: blur(1px);
  transform: translate(1px, 1px);
  z-index: -1;
}

/* Reverse flash/blast effect */
.reverse-flash::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle, rgba(0,255,0,0.3) 0%, transparent 80%);
  animation: blast 0.6s ease-out forwards;
  z-index: -1;
}
@keyframes blast {
  0% { opacity: 1; transform: scale(0.5); }
  100% { opacity: 0; transform: scale(4); }
}

/* Character explosion animation */
.explode-char {
  display: inline-block;
  animation: explodeChar 1s forwards;
}
@keyframes explodeChar {
  0% {
    opacity: 1;
    transform: translate(0, 0) rotate(0deg) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(
      calc(100px - 200px * random()), 
      calc(100px - 200px * random())
    ) rotate(calc(720deg * random())) scale(2);
  }
}

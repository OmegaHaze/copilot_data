/* ==========================================================================
   VAIO Dashboard - CRT Terminal Theme - Main StyleSheet
   Core styling for the retro terminal aesthetic
   
   TABLE OF CONTENTS:
   1. Core Imports
   2. Base Styles
   3. Cursor Styles
   4. CRT Theme Utility Classes
   5. Scrollbar Styling
   6. Grid Component Overrides
   7. Animations & Transitions
   8. Glow Effects
   9. Boot Sequence & CRT Effects
   10. Notification System
      10.1 General Notification Styles
      10.2 Error Notification Styles
      10.3 Error Indicators & Animations
   11. Debug Overlay System
   ========================================================================== */

/* ==========================================================================
   1. CORE IMPORTS
   ========================================================================== */

/* Core Tailwind Imports */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* ==========================================================================
   2. BASE STYLES
   ========================================================================== */

/* Base styles that apply regardless of theme */
html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  background: #000;
  color: #85EFAC; /* Primary green color */
  font-family: monospace;
  
  /* Subtle green inset glow effect for entire viewport */
  box-shadow:
    inset 0 0 100px #85EFAC1a,
    inset 0 0 200px #85EFAC14,
    inset 0 0 400px #85EFAC0d;
  overflow: hidden;
  
  /* Green Custom cursor */
  cursor: url('/uploads/icons/normal-cursor.svg'), auto; /* Default cursor */
}

/* ==========================================================================
   3. CURSOR STYLES
   ========================================================================== */

/* Custom cursor styles for different interactive elements */

/* Hover cursor style */
a:hover, button:hover, .hover-cursor {
  cursor: url('/uploads/icons/hover-cursor.svg'), pointer; /* Cursor when hovering over links/buttons */
}

/* Move cursor style */
.move-cursor {
  cursor: url('/uploads/icons/move-cursor.svg'), move; /* Cursor when dragging items */
}

/* Text hover cursor */
a:hover, p:hover, .text-hover-cursor {
  cursor: url('/uploads/icons/text-hover-cursor.svg'), text; /* Cursor when hovering over text */
}

/* ==========================================================================
   4. CRT THEME UTILITY CLASSES
   Replaces standard Tailwind classes with CRT-themed equivalents
   ========================================================================== */

/* Background utilities */
.crt-bg-blk { @apply bg-black; }
.crt-bg-grn { @apply bg-green-400/10; }

/* Border utilities */
.crt-border-green6 { @apply border-green-600 border; }
.crt-border-green9  { @apply border-green-900 border; }
.crt-border6 { @apply border-green-600 border;}
.crt-border-inner7 { @apply border-green-700 border; }
.crt-border-b { @apply border-green-700 border-b; }
.crt-border-l { @apply border-green-700 border-l; }
.crt-border-r { @apply border-green-700 border-r; }
.crt-border-t { @apply border-green-700 border-t; }

/* Text utilities */
.crt-text4 { @apply text-green-400; }
.crt-text3 { @apply text-green-300; }
.crt-text5 { @apply text-green-500; }
.crt-text2 { @apply text-green-200; }
.crt-text7 { @apply text-green-700; }

/* Element styles */
.crt-link5 { @apply text-green-500 hover:text-green-300 hover:bg-green-900/30; }
.crt-panel-tab8 { @apply hidden md:flex items-center justify-center absolute top-4 bg-green-800 text-black text-xs font-bold px-2 py-1 move-cursor shadow-lg z-50; }

/* ==========================================================================
   5. SCROLLBAR STYLING
   ========================================================================== */

/* Simple square transparent scrollbar with green tint */
::-webkit-scrollbar {
  width: 7px;
  height: 7px;
}

::-webkit-scrollbar-thumb {
  background-color: rgba(57, 255, 20, 0.1);
  border-radius: 0;
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

/* ==========================================================================
   6. GRID COMPONENT OVERRIDES
   ========================================================================== */

/* Override the default shadow color for dragging items */
.react-grid-item.react-draggable-dragging {
  box-shadow: 0 0 10px rgba(57, 255, 20, 0.5) !important; /* Green shadow using your theme color */
  z-index: 3;
}

/* Override the resizing shadow as well */
.react-grid-item.resizing {
  box-shadow: 0 0 10px rgba(57, 255, 20, 0.5) !important;
  z-index: 3;
}

/* You can also customize the placeholder shadow if needed */
.react-grid-placeholder {
  background: rgba(57, 255, 20, 0.2) !important;
  border: 2px dashed rgba(57, 255, 20, 0.4) !important;
}

/* ==========================================================================
   7. ANIMATIONS & TRANSITIONS
   ========================================================================== */

/* Authentic Matrix digital rain effect */
@keyframes matrix-drop {
  0% {
    opacity: 0;
    filter: brightness(2) blur(2px);
    transform: translateY(-100vh) scale(1);
    color: #fff;
    text-shadow: 0 0 8px #85EFAC;
  }
  30% {
    opacity: 1;
    filter: brightness(1.8) blur(1.5px);
    color: #fff;
    text-shadow: 
      0 0 8px #85EFAC,
      0 0 16px #85EFAC;
    transform: translateY(-50vh) scale(1);
  }
  60% {
    opacity: 1;
    filter: brightness(1.4) blur(1px);
    color: #85EFAC;
    text-shadow: 
      0 0 6px #85EFAC,
      0 0 12px #85EFAC;
    transform: translateY(-20vh) scale(1);
  }
  85% {
    filter: brightness(1.1) blur(0.5px);
    text-shadow: 0 0 4px #85EFAC;
    transform: translateY(-5vh) scale(1);
  }
  100% {
    opacity: 1;
    filter: brightness(1) blur(0);
    transform: translateY(0) scale(1);
    color: #85EFAC;
  }
}

/* Matrix rain character styling */
.matrix-drop-char {
  display: inline-block;
  position: relative;
  animation: matrix-drop 0.6s cubic-bezier(0.1, 0.9, 0.2, 1) backwards;
  animation-delay: calc(var(--delay, 0s) + var(--rand-y, 0) * 0.25s);
}

/* Matrix rain trailing effect */
.matrix-drop-char::before {
  content: '';
  position: absolute;
  top: -100vh;
  left: 50%;
  width: 1px;
  height: 100vh;
  background: linear-gradient(180deg, 
    transparent 0%,
    #85EFAC30 30%,
    #85EFAC50 70%,
    transparent 100%
  );
  opacity: 0;
  animation: matrix-trail 0.8s ease-out forwards;
  animation-delay: calc(var(--delay, 0s) + var(--rand-y, 0) * 0.4s);
}

@keyframes matrix-trail {
  0% {
    opacity: 0.5;
    transform: scaleY(0);
  }
  50% {
    opacity: 1;
    transform: scaleY(1);
  }
  100% {
    opacity: 0;
    transform: scaleY(1);
  }
}

/* Modal animations */
@keyframes modalFadeIn {
  from { opacity: 0; transform: translate(-50%, -50%) scale(0.95); }
  to { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

.modal-enter {
  animation: modalFadeIn 0.3s ease-out forwards;
}

@keyframes modalFadeOut {
  from { opacity: 1; transform: translate(-50%, -50%) scale(1); }
  to { opacity: 0; transform: translate(-50%, -50%) scale(0.95); }
}

.modal-exit {
  animation: modalFadeOut 0.3s ease-in forwards;
}

/* ==========================================================================
   8. GLOW EFFECTS
   ========================================================================== */

/* Glow effects for knobs and indicators */
.crt-glow {
  filter: drop-shadow(0 0 2px #39ff14) drop-shadow(0 0 4px #39ff1480);
}

.crt-glow-intense {
  filter: drop-shadow(0 0 1px #39ff14) drop-shadow(0 0 3px #39ff14) drop-shadow(0 0 4px #39ff1480);
}

/* Shadow glow utilities for different intensity levels */
.shadow-glow-sm {
  filter: drop-shadow(0 0 2px currentColor);
}

.shadow-glow-md {
  filter: drop-shadow(0 0 4px currentColor);
}

.shadow-glow-lg {
  filter: drop-shadow(0 0 8px currentColor);
}

/* ==========================================================================
   9. BOOT SEQUENCE & CRT EFFECTS
   ========================================================================== */

/* Full screen flash flicker effect - modified to remove color change */
.flash-flicker {
  animation: hard-flicker 0.2s steps(2, start);
}
@keyframes hard-flicker {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; } /* Changed to opacity variation instead of color change */
}

/* Edge-only flicker effect with 5 flickers in one second */
.edge-flicker::before {
  content: '';
  position: absolute;
  inset: 0;
  box-shadow: 
    0 0 0 2px rgba(0, 255, 0, 0.5),
    0 0 5px 1px rgba(0, 255, 0, 0.3);
  pointer-events: none;
  z-index: 99;
  animation: edge-flash 1s steps(10, start) 1; /* 5 on/off cycles in 1 second (10 steps total) */
}

@keyframes edge-flash {
  0%, 20%, 40%, 60%, 80% { opacity: 0; } /* Off states (5 times) */
  10%, 30%, 50%, 70%, 90% { opacity: 1; } /* On states (5 times) */
}

/* Authentic terminal glitch effect */
.terminal-glitch {
  position: absolute;
  inset: 0;
  z-index: 98;
  pointer-events: none;
  overflow: hidden;
  animation: terminal-glitch-cycle 1s steps(10, start) 1;
}

/* First layer: Horizontal scan distortion */
.terminal-glitch::before {
  content: '';
  position: absolute;
  inset: 0;
  background: transparent;
  z-index: 2;
  animation: horizontal-distortion 1s steps(10, start) 1;
}

/* Second layer: Subtle text corruption and sync issues */
.terminal-glitch::after {
  content: '';
  position: absolute;
  inset: 0;
  z-index: 3;
  background: repeating-linear-gradient(
    to bottom,
    transparent 0%,
    rgba(0, 100, 0, 0.15) 0.2%,
    transparent 0.3%
  );
  opacity: 0;
  mix-blend-mode: screen;
  animation: sync-issue 1s cubic-bezier(0.1, 0.3, 0.2, 1) 1;
}

@keyframes terminal-glitch-cycle {
  0%, 20%, 40%, 60%, 80% { opacity: 0; transform: translateY(0); }
  5%, 25%, 45%, 65%, 85% { 
    opacity: 1; 
    transform: translateY(-1px); 
  }
  15%, 35%, 55%, 75%, 95% { 
    opacity: 1; 
    transform: translateY(1px); 
  }
}

@keyframes horizontal-distortion {
  0%, 20%, 40%, 60%, 80% {
    clip-path: none;
    transform: translateX(0);
  }
  5%, 45%, 85% {
    clip-path: polygon(
      0 0, 
      100% 0, 
      100% 25%, 
      0 25%, 
      0 27%, 
      100% 27%,
      100% 52%, 
      0 52%,
      0 54%, 
      100% 54%,
      100% 100%, 
      0 100%
    );
    transform: translateX(2px);
  }
  15%, 55%, 95% {
    clip-path: polygon(
      0 0, 
      100% 0, 
      100% 78%, 
      0 78%, 
      0 80%, 
      100% 80%,
      100% 100%, 
      0 100%
    );
    transform: translateX(-1px);
  }
}

@keyframes sync-issue {
  0%, 20%, 70%, 100% { opacity: 0; transform: translateY(0); }
  5%, 10%, 15% { opacity: 0.5; transform: translateY(10px); }
  25%, 30%, 35% { opacity: 0.3; transform: translateY(-7px); }
  45%, 50%, 55% { opacity: 0.5; transform: translateY(5px); }
  80%, 85%, 90% { opacity: 0.3; transform: translateY(-5px); }
}

/* Subtle glow effect for the screen edge */
.boot-glow::before {
  content: '';
  position: absolute;
  inset: 0;
  box-shadow: 
    0 0 120px 30px rgba(0, 255, 0, 0.1),
    0 0 300px 60px rgba(0, 255, 0, 0.05),
    inset 0 0 120px 30px rgba(0, 255, 0, 0.1);
  pointer-events: none;
  z-index: -1;
}

/* CRT scanlines effect */
.scanlines {
  background-image: repeating-linear-gradient(
    to bottom,
    rgba(231, 231, 231, 0.1),
    rgba(0, 255, 0, 0.08) 1px,
    transparent 1px,
    transparent 3px
  );
  background-size: 100% 3px;
  animation: scanlines 0.6s linear infinite;
}

/* Faster scan pulse */
.scan-pulse {
  animation: scanlines 0.3s linear infinite;
}

/* Moving scanlines animation */
@keyframes scanlines {
  0% { background-position: 0 0; }
  100% { background-position: 0 6px; } /* Move by 6px (2x pattern height) */
}

/* Typing animation effect */
.typing-line {
  animation: typing 0.3s ease-out;
}
@keyframes typing {
  from { opacity: 0; transform: translateX(-4px); }
  to   { opacity: 1; transform: translateX(0); }
}

/* Text glitch flicker effect */
.glitch-flicker {
  animation: glitch 0.5s steps(2, start) infinite;
  position: relative;
}
@keyframes glitch {
  0%   { text-shadow: 2px 0 red, -2px 0 cyan; transform: skewX(10deg); }
  20%  { text-shadow: -2px 0 red, 2px 0 cyan; transform: skewX(-5deg); }
  40%  { text-shadow: 1px 0 red, -1px 0 cyan; transform: skewX(0deg); }
  60%  { text-shadow: -1px 0 red, 1px 0 cyan; transform: skewX(5deg); }
  80%  { text-shadow: 2px 0 red, -2px 0 cyan; transform: skewX(-10deg); }
  100% { text-shadow: none; transform: none; }
}

/* Glow pulse animation */
@keyframes glow {
  0%, 100% { text-shadow: 0 0 2px #39ff14, 0 0 10px #39ff14; }
  50%      { text-shadow: 0 0 4px #39ff14, 0 0 20px #39ff14; }
}

/* CRT burn-in effect */
.burn-in {
  position: relative;
}
.burn-in::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  color: #39ff1480;
  filter: blur(1px);
  transform: translate(1px, 1px);
  z-index: -1;
}

/* Reverse flash/blast effect */
.reverse-flash::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle, rgba(0,255,0,0.3) 0%, transparent 80%);
  animation: blast 0.6s ease-out forwards;
  z-index: -1;
}
@keyframes blast {
  0% { opacity: 1; transform: scale(0.5); }
  100% { opacity: 0; transform: scale(4); }
}

/* Character explosion animation */
.explode-char {
  display: inline-block;
  animation: explodeChar 1s forwards;
}
@keyframes explodeChar {
  0% {
    opacity: 1;
    transform: translate(0, 0) rotate(0deg) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(
      calc(100px - 200px * random()), 
      calc(100px - 200px * random())
    ) rotate(calc(720deg * random())) scale(2);
  }
}

/* ==========================================================================
   10. NOTIFICATION SYSTEM
   Styles for the notification system including standard, error and warning
   notifications. Also includes animations and indicators.
   ========================================================================== */

/* ==========================================================================
   10.1 GENERAL NOTIFICATION STYLES
   ========================================================================== */

/* Glass notification styling for alerts, toasts and dialogs */
.glass-notification {
  background-color: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(5px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.6), 
              0 0 1px rgba(133, 239, 172, 0.2),
              0 0 4px rgba(133, 239, 172, 0.1),
              inset 0 0 2px rgba(133, 239, 172, 0.05);
  position: relative;
}

/* Animation for notifications */
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fadeInDown 0.3s ease-out forwards;
}

/* Slide-in animation for notifications */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-slide-in {
  animation: slideIn 0.4s ease-out forwards;
}

/* Slide-in from top for notification layout */
@keyframes slide-in {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.notification-enter {
  animation: slide-in 0.3s forwards ease-out;
}

/* Stacking improvements for notifications */
.notification-container {
  perspective: 1000px;
}

.notification-item {
  transform-origin: top center;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
}

/* Improved stacking for multiple notifications */
.notification-item:nth-child(1) { z-index: 100; }
.notification-item:nth-child(2) { z-index: 99; }
.notification-item:nth-child(3) { z-index: 98; }
.notification-item:nth-child(4) { z-index: 97; }
.notification-item:nth-child(5) { z-index: 96; }

/* Vertical layout styling */
.notification-row {
  transition: max-height 0.3s ease, opacity 0.5s ease;
  overflow: hidden;
}

.notification-row-header {
  opacity: 0;
  transition: opacity 0.3s ease;
}

.notification-row:not(.max-h-0) .notification-row-header {
  opacity: 1;
}

/* ==========================================================================
   10.2 ERROR NOTIFICATION STYLES
   ========================================================================== */

/* Glass error styling for alerts and error messages 
   CONSOLIDATED: Combines previous duplicate glass-error classes */
.glass-error {
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  background-color: rgba(0, 0, 0, 0.7); 
  border: 1px solid rgba(239, 68, 68, 0.15);
  box-shadow: 
    0 4px 12px rgba(0, 0, 0, 0.6), 
    0 0 1px rgba(239, 68, 68, 0.2),
    0 0 4px rgba(239, 68, 68, 0.1),
    inset 0 0 2px rgba(239, 68, 68, 0.05);
  position: relative;
}

/* Special glass effect for errors - red tint */
.glass-error-error {
  background-color: rgba(0, 0, 0, 0.35);
  border-color: rgba(239, 68, 68, 0.15);
  box-shadow: 
    0 2px 15px rgba(239, 68, 68, 0.1),
    inset 0 0 15px rgba(239, 68, 68, 0.03);
}

/* Special glass effect for warnings - orange/amber tint */
.glass-error-warning {
  background-color: rgba(0, 0, 0, 0.35);
  border-color: rgba(245, 158, 11, 0.15);
  box-shadow: 
    0 2px 15px rgba(245, 158, 11, 0.1),
    inset 0 0 15px rgba(245, 158, 11, 0.03);
}

/* ==========================================================================
   10.3 ERROR INDICATORS & ANIMATIONS
   ========================================================================== */

/* Border pulse animation for console errors - green theme */
@keyframes error-border-pulse {
  0%, 100% { 
    border-color: rgba(57, 255, 20, 0.3); 
    box-shadow: 0 0 5px rgba(57, 255, 20, 0.15);
  }
  50% { 
    border-color: rgba(57, 255, 20, 0.6); 
    box-shadow: 0 0 10px rgba(57, 255, 20, 0.25);
  }
}

.border-pulse {
  animation: error-border-pulse 2.5s infinite ease-in-out;
}

/* Error border pulse with red tint for errors */
@keyframes error-border-error-pulse {
  0%, 100% { 
    border-color: rgba(239, 68, 68, 0.4); 
    box-shadow: 0 0 6px rgba(239, 68, 68, 0.2);
  }
  50% { 
    border-color: rgba(239, 68, 68, 0.7); 
    box-shadow: 0 0 12px rgba(239, 68, 68, 0.3);
  }
}

.error-border-pulse {
  animation: error-border-error-pulse 2s infinite ease-in-out;
}

/* Error indicator animations */
@keyframes pulse-glow {
  0% {
    transform: scale(1);
    filter: drop-shadow(0 0 2px rgba(239, 68, 68, 0.3));
  }
  50% {
    transform: scale(1.1);
    filter: drop-shadow(0 0 5px rgba(239, 68, 68, 0.6));
  }
  100% {
    transform: scale(1);
    filter: drop-shadow(0 0 2px rgba(239, 68, 68, 0.3));
  }
}

.error-indicator {
  animation: pulse-glow 2s infinite ease-in-out;
  will-change: transform, filter;
  opacity: 0.8;
}

.error-indicator:hover {
  animation-play-state: paused;
  opacity: 1;
}

/* ==========================================================================
   11. DEBUG OVERLAY SYSTEM
   ========================================================================== */

/* Debug Overlay - Futuristic Glass Styling */
.debug-glass {
  background: rgba(0, 0, 0, 0.35);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border: 1px solid rgba(57, 255, 20, 0.08);
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.4),
    inset 0 0 20px rgba(57, 255, 20, 0.02);
}

.debug-glass-panel {
  background: rgba(0, 0, 0, 0.25);
  border: 1px solid rgba(57, 255, 20, 0.05);
  border-radius: 4px;
  box-shadow: 
    0 2px 15px rgba(0, 0, 0, 0.3),
    inset 0 0 10px rgba(57, 255, 20, 0.01);
}

.debug-tab-active {
  background: rgba(0, 0, 0, 0.4);
  border-bottom: 2px solid rgba(57, 255, 20, 0.6);
  box-shadow: 0 -5px 15px rgba(57, 255, 20, 0.05);
}

.debug-tab-inactive {
  border-bottom: 2px solid transparent;
  opacity: 0.7;
  background: rgba(0, 0, 0, 0.2);
}

/* Debug header styling with animation */
@keyframes debug-header-pulse {
  0%, 100% {
    text-shadow: 0 0 8px rgba(57, 255, 20, 0.4);
  }
  50% {
    text-shadow: 0 0 12px rgba(57, 255, 20, 0.6);
  }
}

.debug-header {
  color: rgba(57, 255, 20, 0.9);
  text-shadow: 0 0 10px rgba(57, 255, 20, 0.3);
  letter-spacing: 1px;
  transition: all 0.2s ease;
  animation: debug-header-pulse 4s infinite ease-in-out;
}

.debug-text-glow {
  text-shadow: 0 0 5px currentColor;
}

/* Hover effect for debug items */
.debug-item-hover {
  transition: all 0.15s ease-in-out;
}

.debug-item-hover:hover {
  background-color: rgba(57, 255, 20, 0.1);
  box-shadow: inset 0 0 8px rgba(57, 255, 20, 0.1);
}

/* Glowing border animation for debug panels */
@keyframes debug-border-glow {
  0%, 100% {
    border-color: rgba(57, 255, 20, 0.1);
    box-shadow: 
      0 0 5px rgba(57, 255, 20, 0.05),
      inset 0 0 5px rgba(57, 255, 20, 0.05);
  }
  50% {
    border-color: rgba(57, 255, 20, 0.2);
    box-shadow: 
      0 0 10px rgba(57, 255, 20, 0.1),
      inset 0 0 10px rgba(57, 255, 20, 0.1);
  }
}

.debug-border-glow {
  animation: debug-border-glow 4s infinite ease-in-out;
}

/* Pulsing indicator dot */
@keyframes debug-indicator-pulse {
  0%, 100% {
    opacity: 0.7;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
    box-shadow: 0 0 5px currentColor;
  }
}

.debug-indicator {
  animation: debug-indicator-pulse 2s infinite ease-in-out;
}

/* The debug overlay container with CRT scanlines effect */
.debug-overlay-container {
  background-color: rgba(0, 0, 0, 0.8);
  position: relative;
}

.debug-overlay-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    transparent 50%,
    rgba(0, 0, 0, 0.05) 51%
  );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 1;
  opacity: 0.15;
}

.debug-tab-inactive:hover {
  opacity: 1;
  background: rgba(0, 0, 0, 0.2);
}
